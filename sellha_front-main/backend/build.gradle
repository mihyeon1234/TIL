plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.10.2'
	id 'org.graalvm.buildtools.native' version '0.9.1'
}

group = 'com.app.mayfarm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter')
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.3'
	
	compileOnly 'org.projectlombok:lombok'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: '2.4.5'
	
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2','io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
   
    implementation 'commons-io:commons-io:2.5'
    
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4-beta1'

	
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.2'


}



test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

nativeBuild {
	classpath "$buildDir/resources/aot", "$buildDir/classes/java/aot"
}
